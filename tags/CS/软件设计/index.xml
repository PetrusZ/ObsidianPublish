<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>CS/软件设计 on</title><link>https://obsidian.codeplayer.org/tags/CS/%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1/</link><description>Recent content in CS/软件设计 on</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://obsidian.codeplayer.org/tags/CS/%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1/index.xml" rel="self" type="application/rss+xml"/><item><title>DDD领域驱动设计</title><link>https://obsidian.codeplayer.org/Cards/CS/%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1/DDD%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1/</link><pubDate>Sun, 09 Apr 2023 14:51:49 +0800</pubDate><guid>https://obsidian.codeplayer.org/Cards/CS/%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1/DDD%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1/</guid><description>基础 Domain-Driven Design Domain-Driven Design：基于 领域 的工程设计。
领域暂时可以将其理解为“业务问题的范畴“。
领域可大可小，对应着大小业务问题的边界。简单来说，领域驱动设计就是将业务上要做的一件大事，通过推演和抽象，拆分成多个内聚的领域。
面向接口编程，高内聚、低耦合。
DP(Domain Primitive) 构建领域的基础类型。作用：明确接口语义、内聚隐性逻辑、简化单元测试。
定义：在 DDD里，DP 可以说是一切模型、方法、架构的基础。它是在特定领域、拥有精准定义、可以自我验证、拥有行为的对象。可以认为是领域的最小组成部分。
DP三条原则：
让隐性的概念显性化
让隐性的上下文显性化
封装多对象行为</description></item></channel></rss>