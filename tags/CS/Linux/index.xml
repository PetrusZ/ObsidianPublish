<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>CS/Linux on</title><link>https://obsidian.codeplayer.org/tags/CS/Linux/</link><description>Recent content in CS/Linux on</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><atom:link href="https://obsidian.codeplayer.org/tags/CS/Linux/index.xml" rel="self" type="application/rss+xml"/><item><title>系统资源计算</title><link>https://obsidian.codeplayer.org/Cards/CS/Linux/%E7%B3%BB%E7%BB%9F%E8%B5%84%E6%BA%90%E8%AE%A1%E7%AE%97/</link><pubDate>Sun, 09 Apr 2023 17:22:36 +0800</pubDate><guid>https://obsidian.codeplayer.org/Cards/CS/Linux/%E7%B3%BB%E7%BB%9F%E8%B5%84%E6%BA%90%E8%AE%A1%E7%AE%97/</guid><description>内存 VIRT 进程“需要的”虚拟内存大小，包括进程使用的库、代码、数据，以及malloc、new分配的堆空间和分配的栈空间等； 假如进程新申请10MB的内存，但实际只使用了1MB，那么它会增长10MB，而不是实际的1MB使用量。 VIRT = SWAP + RES RES 进程当前使用的内存大小，包括使用中的malloc、new分配的堆空间和分配的栈空间，但不包括swap out量； 包含其他进程的共享； 如果申请10MB的内存，实际使用1MB，它只增长1MB，与VIRT相反； 关于库占用内存的情况，它只统计加载的库文件所占内存大小。 RES = CODE + DATA SHR 除了自身进程的共享内存，也包括其他进程的共享内存； 虽然进程只使用了几个共享库的函数，但它包含了整个共享库的大小； 计算某个进程所占的物理内存大小公式：RES – SHR； swap out后，它将会降下来。</description></item><item><title>homelab</title><link>https://obsidian.codeplayer.org/Cards/CS/Linux/homelab/</link><pubDate>Sun, 09 Apr 2023 14:51:49 +0800</pubDate><guid>https://obsidian.codeplayer.org/Cards/CS/Linux/homelab/</guid><description> 路由器 openwrt openclash zerotier K8S K9S registry harbor 支持docker镜像 支持K8S helm OSS Minio</description></item><item><title>tmux</title><link>https://obsidian.codeplayer.org/Cards/CS/Linux/tmux/</link><pubDate>Sun, 09 Apr 2023 14:51:49 +0800</pubDate><guid>https://obsidian.codeplayer.org/Cards/CS/Linux/tmux/</guid><description>快捷键 tmux窗口最大化：prefix+z</description></item><item><title>zerotier-moon</title><link>https://obsidian.codeplayer.org/Cards/CS/Linux/zerotier-moon/</link><pubDate>Sun, 09 Apr 2023 14:51:49 +0800</pubDate><guid>https://obsidian.codeplayer.org/Cards/CS/Linux/zerotier-moon/</guid><description>使用docker搭建 部署命令：docker run --name zerotier-moon -d --restart always -p 9993:9993/udp -v &amp;lt;zerotier-moon-config dir&amp;gt;:/var/lib/zerotier-one seedgou/zerotier-moon -4 &amp;lt;public ipv4 addression&amp;gt; 查看moon id：docker logs zerotier-moon 防火墙设置 9993端口的TCP和UDP均要打开 客户端配置 直接使用命令 zerotier-cli orbit xxxxxx xxxxxx 添加 将moon生成的配置的moons.</description></item><item><title>ZFS</title><link>https://obsidian.codeplayer.org/Cards/CS/Linux/ZFS/</link><pubDate>Sun, 09 Apr 2023 14:51:49 +0800</pubDate><guid>https://obsidian.codeplayer.org/Cards/CS/Linux/ZFS/</guid><description>ARC缓存限制
需要把参数写到cmdline中，写在 /etc/modprobe.d 中不生效
GRUB_CMDLINE_LINUX=&amp;quot;zfs.zfs_arc_max=8589934592 zfs.zfs_arc_min=4294967296&amp;quot;</description></item><item><title>内核</title><link>https://obsidian.codeplayer.org/Cards/CS/Linux/%E5%86%85%E6%A0%B8/</link><pubDate>Sun, 09 Apr 2023 14:51:49 +0800</pubDate><guid>https://obsidian.codeplayer.org/Cards/CS/Linux/%E5%86%85%E6%A0%B8/</guid><description>/etc/modules-load.d 与 In /etc/modprobe.d的区别
/etc/modules-load.d can only load modules, nothing more. You can’t blacklist a module and you can’t insert a module with special options.</description></item><item><title>进程</title><link>https://obsidian.codeplayer.org/Cards/CS/Linux/%E8%BF%9B%E7%A8%8B/</link><pubDate>Sun, 09 Apr 2023 14:51:49 +0800</pubDate><guid>https://obsidian.codeplayer.org/Cards/CS/Linux/%E8%BF%9B%E7%A8%8B/</guid><description>进程与线程 进程：资源分配的基本单位
线程：调度的基本单位
无论是线程还是进程，在 linux 中都以 task_struct 描述，从内核角度看，与进程无本质区别
Glibc 中的 pthread 库提供 NPTL（Native POSIX Threading Library）支持
进程的内存使用 CPU对内存的访问 CPU 上有个 Memory Management Unit（MMU） 单元</description></item><item><title>镜像站</title><link>https://obsidian.codeplayer.org/Cards/CS/Linux/%E9%95%9C%E5%83%8F%E7%AB%99/</link><pubDate>Sun, 09 Apr 2023 14:51:49 +0800</pubDate><guid>https://obsidian.codeplayer.org/Cards/CS/Linux/%E9%95%9C%E5%83%8F%E7%AB%99/</guid><description>北京外国语大学开源软件镜像站</description></item></channel></rss>