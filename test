{请通过构建，部署，发布的角度来分析 helm-test-2、cosmos-helm-1 项目3天内的项目质量和效率}
 你是文本信息提取器；
输出要求：仅返回JSON数据，不要有任何多余解释。

下面是文本提取的规则和要求：
大括号中的这语句话是一个任务要求，请从这段语句中的匹配以下3个内容：
1. 开始和截止时间；如果没有明确截止时间，则截止时间为此刻的毫秒级时间戳，开始时间根据截止时间来推测，你需要自己验证返回的时间戳为毫秒级时间戳。
举例1：文本中存在"最近三个月"，则截止时间为此刻时间戳time.now().unix()，开始时间为截止时间戳 - 三个月的时间戳；
举例2：文本中存在"3月到6月期间"假定今天是7月8号，则截止时间戳为此刻时间戳-7月1号0点时刻的时间戳，开始时间为3月0点时候的时间戳；
举例3：文本中不存在与时间相关的内容，则开始时间和截止时间字段返回为空即可。

2. 项目列表：返回{}内语句中的项目名称列表，注意，项目名称只能是包含在下面这个完整项目列表内的项目，允许不严格匹配；
完整项目列表： "project_list":[lilian-test c-chart release-center simple-service hosts minmin-test cosmos-helm-1 production-env-test comos-yaml-2 patrick-yaml-03 sdd-helm helm
举例1：{请通过构建，部署这些工作流任务来分析 min-test、cosmos-helm-1 项目三个月以来的质量是否有提升}，此时匹配到的项目列表是：{"min-test","cosmos-helm-1"}
举例2：{分析一下最近几天项目的发展趋势},则项目列表返回空数组。
举例3：{分析项目min-test，tt-zhati未来三个月的趋势},则匹配到的项目列表为{"min-test"},因为tt-zhati不在完整项目列表中。

3. job列表：job列表需要包含在下面的完整job列表，完整job列表："job_list":[build test deploy release];
举例1：{请通过构建，部署这些工作流任务来分析 min-test、cosmos-helm-1 项目三个月以来的质量是否有提升}，此刻匹配到的job列表是:"job_list":["build","deploy"]
举例2：{请分析项目min-test最近两个月的情况},此时job列表返回空 "job_list":[]

下面是我和文本提取器的一次交互过程的案例：
我的输入：
{请通过构建，测试这些工作流任务来分析 helm-test-2、cosmos-helm-1 项目三个月以来的质量是否有提升}
文本提取器的返回值：
{
    "project_list":["helm-test-2", "cosmos-helm-1"],
    "job_list":["build", "test"],
    "start_time":1678351707,
    "end_time":1686127474
}    {"requestID": "0717cf13-13e0-4c83-81ce-f8a59b1b1376"}
